#+LANGUAGE: ru
#+TITLE: ДЗ 3
#+Author: Михаил Волхов M3438

* Формулировка задания
  Имея отношения с атрибутами $StudentId, StudentName, GroupId,
  GroupName, CourseId, CourseName, LecturerId, LecturerName, Mark$:
  1. Найти функциональные зависимости.
  2. Найти ключи.
  3. Найти НМФЗ.
* Функциональные зависимости
  Будем считать, что группа -- это параметр, зависимый от года (то
  есть, строка "M3438", а не "третья группа потока year2013"). Таблица
  функциональных зависимостей без учета тривиальных:
  #+ATTR_HTML: :border 2 :rules all :frame border
  | Зависимость                           | Пояснение                                                                         |
  |---------------------------------------+-----------------------------------------------------------------------------------|
  | $StudentId → StudentName$             | Нумерация студентов                                                               |
  | $StudentId → GroupId$                 | Каждый студент находится в одной группе                                           |
  | $GroupId → GroupName$                 | Нумерация групп                                                                   |
  | $CourseId → CourseName$               | Нумерация курсов                                                                  |
  | $LecturerId → LecturerName$           | Нумерация преподавателей                                                          |
  | $CourseId, GroupId → LecturerId$      | Курс должен вестись преподавателем (разные группы могут иметь разных)             |
  | $StudentId, CourseId, GroupId → Mark$ | Каждый год (определяется группой) каждый студент получает оценку по каждому курсу |
  |---------------------------------------+-----------------------------------------------------------------------------------|
  Сделаем два замечания:
  1. Четыре ФЗ выражают похожую зависимость $*Id -> *Name$.
  2. Модель "курс и группа определяют преподавателя", выражаемая
     шестой ФЗ, не соответствует в точности жизненным реалиям (один
     предмет у одной группы могут вести несколько преподавателей).
* Ключи
  Будем искать ключ по определению как минимальный по включению
  надключ, исключая элементы по очереди из очевидного надключа --
  множества всех атрибутов без дубликатов с "Name" (возьмем только
  Id).
  * $StudentId, GroupId, CourseId, LecturerId, Mark$
  * Уберем Mark, потому что он однозначно определяется первыми тремя
    атрибутами: $StudentId, GroupId, CourseId, LecturerId$.
  * Аналогично с помощью предпоследней зависимости элиминируем
    $LecturerId$: $StudentId, GroupId, CourseId$
  * Используя вторую ФЗ также избавимся от $GroupId$: $StudentId,
    CourseId$.
  * $⟨StudentId, CourseId⟩$ есть минимальный по включению надключ, то
    есть является ключом. Заметим, что любой другой порядок устранения
    элементов из множества атрибутов привел бы к этому же ключу,
    следовательно он единственный.
* Неприводимые множества ФЗ
  1. Для каждого правила расщепим правую часть чтобы она стала
     единичной. Эта операци не имеет смысла, так как нетривиальные ФЗ
     нашей модели и так содержат только по одному атрибуту справа.
  2. Будем удалять атрибуты $A$ из $A ∪ X → B$, такие что $(A ∪
     X)^{+}_{S} = A^{+}_{S}$. Очевидно, что на этом шаге ФЗ, в которых
     левая часть содержит только один элемент ($*Id -> *Name$) не
     могут быть выкинуты из сета.
     1. $StudentId, GroupId, CourseId → Mark$

        Поскольку $StudentId^+_S = \{StudentId, StudentName, GroupId,
        GroupName\}$, то очевидно $(StudentId, GroupId, CourseId)^+_S =
        (StudentId, CourseId)^+_S$, поэтому, приняв $GroupId$ за $A$,
        выкинем его из этого правила.

        $StudentId, CourseId → Mark$
     2. $CourseId, GroupId → LecturerId$
        * $CourseId^+_S = \{CourseId, CourseName\}$.
        * $GroupId^+_S = \{GroupId, GroupName\}$.

        Наблюдаем, что ни $CourseId^+$, ни $GroupId^+$ не содержат
        $LecturerId$, следовательно это правило неприменимо.
  3. Удалим все правила $A → B$, что $B ⊂ A^+_{S ∖ \{A →
     B\}}$. Проверив руками дополнения оставшихся множеств, убедимся,
     что таких правил нет (долго писать руками; можно дерево
     нарисовать на бумажке для наглядности).

  Итоговое неприводимое множество ФЗ:
  * $StudentId → StudentName$
  * $StudentId → GroupId$
  * $GroupId → GroupName$
  * $CourseId → CourseName$
  * $LecturerId → LecturerName$
  * $CourseId, GroupId → LecturerId$
  * $StudentId, CourseId → Mark$
